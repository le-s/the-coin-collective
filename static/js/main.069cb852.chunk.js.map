{"version":3,"sources":["components/graph.jsx","components/query_module.jsx","components/coin_index.jsx","components/navbar.jsx","components/App.js","index.js"],"names":["Graph","items","data","className","keys","indexBy","width","height","margin","top","right","bottom","left","padding","innerPadding","groupMode","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","theme","axis","ticks","text","fill","fontSize","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","itemTextColor","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","QueryModule","submit","update","onSubmit","type","name","value","onChange","CoinIndex","props","state","error","isLoaded","formFields","current_price","market_cap","total_volume","high_24h","low_24h","price_change_24h","circulating_supply","total_supply","handleSubmit","bind","fetch","then","res","json","result","console","log","setState","field","this","e","preventDefault","tempData","h","push","message","React","Component","Navbar","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.069cb852.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Bar } from \"@nivo/bar\";\n\nconst Graph = ({items, data}) => {\n  return (\n    <div className=\"graph\">\n      <h1>Crypto Market</h1>\n      <Bar\n        data={items}\n        keys={data}\n        indexBy=\"name\"\n        width={900}\n        height={540}\n        margin={{ top: 10, right: 130, bottom: 70, left: 90 }}\n        padding={0.3}\n        innerPadding={2}\n        groupMode=\"grouped\"\n        colors={{ scheme: \"category10\" }}\n        borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 10,\n          tickPadding: 5,\n          tickRotation: 35,\n          legend: \"Coin\",\n          legendPosition: \"middle\",\n          legendOffset: 60\n        }}\n        axisLeft={{\n          tickSize: 0,\n          tickPadding: 6,\n          tickRotation: 35,\n          legend: \"Volume\",\n          legendPosition: \"middle\",\n          legendOffset: -80\n        }}\n        theme={{\n          axis: {\n            ticks: {\n              text: {\n                fill: \"#ffffff\"\n              }\n            },\n            legend: {\n              text: {\n                fill: \"#aaaaaa\",\n                fontSize: \"20px\"\n              }\n            }\n          }\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{\n          from: \"color\",\n          modifiers: [[\"darker\", 1.6]]\n        }}\n        legends={[\n          {\n            dataFrom: \"keys\",\n            anchor: \"bottom-right\",\n            direction: \"column\",\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: \"left-to-right\",\n            itemOpacity: 0.85,\n            itemTextColor: \"#ffffff\",\n            symbolSize: 20,\n            effects: [\n              {\n                on: \"hover\",\n                style: {\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n      />\n    </div>\n  );\n}\n\nexport default Graph;","import React from 'react';\n\nimport '../stylesheets/splash.css'\n\nconst QueryModule = ({submit, update}) => {\n  return (\n    <div className=\"query-module\">\n      <form className=\"form\" onSubmit={submit}>\n        <h1>Options</h1>\n        <div className=\"input-format\">\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"Current Price\"\n              value=\"true\"\n              onChange={update(\"current_price\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Current Price\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"Market Cap\"\n              value=\"true\"\n              onChange={update(\"market_cap\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Market Cap\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"Total Volume\"\n              value=\"true\"\n              onChange={update(\"total_volume\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Total Volume\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"24h High\"\n              value=\"true\"\n              onChange={update(\"high_24h\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            24h High\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"24h Low\"\n              value=\"true\"\n              onChange={update(\"low_24h\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            24h Low\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"24h Change\"\n              value=\"true\"\n              onChange={update(\"price_change_24h\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Change in 24h\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"Circulating Supply\"\n              value=\"true\"\n              onChange={update(\"circulating_supply\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Circulating Supply\n          </label>\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              name=\"Total Supply\"\n              value=\"true\"\n              onChange={update(\"total_supply\")}\n            />\n            <span className=\"checkbox-custom\"></span>\n            Total Supply\n          </label>\n        </div>\n        <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n      </form>\n    </div>\n  );\n};\n\nexport default QueryModule;","import React from 'react';\n\nimport Graph from './graph';\nimport QueryModule from './query_module'\n\nimport '../stylesheets/splash.css'\n\nclass CoinIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      data: [],\n      formFields: {\n        current_price: false,\n        market_cap: false,\n        total_volume: false,\n        high_24h: false,\n        low_24h: false,\n        price_change_24h: false,\n        circulating_supply: false,\n        total_supply: false\n      }\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=5&page=1&sparkline=false\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }  \n\n  update(field) {\n    let formFields = {...this.state.formFields};\n\n    return () => {\n      formFields[field] = !formFields[field];\n\n      this.setState({\n        formFields\n      });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let tempData = [];\n\n    for (let h in this.state.formFields) {\n      if (this.state.formFields[h]) {\n        tempData.push(`${h}`);\n      }\n    }\n\n    this.setState({\n      data: tempData\n    })\n\n    console.log(this.state)\n  }\n\n  render() {\n    const { error, isLoaded, items, data } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <>\n          <div className=\"graph-query-wrapper\">\n            <Graph items={items} data={data}/>\n            <QueryModule submit={this.handleSubmit} update={this.update}/>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nexport default CoinIndex","import React from 'react';\nimport '../stylesheets/navbar.css'\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"navbar\">\n          <h1>The Coin Collective</h1>\n          <div className=\"social-container\">\n            <div className=\"portfolio\">\n              <div className=\"linkedin-align\">\n                <a href=\"https://www.le-steven.com\">Portfolio</a>\n              </div>\n            </div>\n            <div className=\"github\">\n              <a href=\"https://github.com/le-s\">Github</a>\n            </div>\n            <div className=\"linkedin\">\n              <div className=\"linkedin-align\">\n                <a href=\"https://www.linkedin.com/in/sle94/\">LinkedIn</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport CoinIndex from './coin_index.jsx';\nimport Navbar from './navbar';\n// import Footer from './footer';\n\nimport '../stylesheets/index.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <CoinIndex />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}